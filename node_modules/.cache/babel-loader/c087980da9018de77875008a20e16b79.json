{"ast":null,"code":"import _regeneratorRuntime from\"/Users/a1/Downloads/Mainnet/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/a1/Downloads/Mainnet/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/a1/Downloads/Mainnet/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/a1/Downloads/Mainnet/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import styled from'styled-components';import{useEffect,useState}from'react';import Button from'@material-ui/core/Button';import{CircularProgress}from'@material-ui/core';import{GatewayStatus,useGateway}from'@civic/solana-gateway-react';import{jsx as _jsx}from\"react/jsx-runtime\";export var CTAButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: block !important;\\n  margin: 0 auto !important;\\n  background-color: var(--title-text-color) !important;\\n  min-width: 120px !important;\\n  font-size: 1em !important;\\n\"])));export var MintButton=function MintButton(_ref){var onMint=_ref.onMint,candyMachine=_ref.candyMachine,isMinting=_ref.isMinting,isEnded=_ref.isEnded,isActive=_ref.isActive,isSoldOut=_ref.isSoldOut;var _useGateway=useGateway(),requestGatewayToken=_useGateway.requestGatewayToken,gatewayStatus=_useGateway.gatewayStatus;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isVerifying=_useState4[0],setIsVerifying=_useState4[1];useEffect(function(){setIsVerifying(false);if(gatewayStatus===GatewayStatus.COLLECTING_USER_INFORMATION&&clicked){// when user approves wallet verification txn\nsetIsVerifying(true);}else if(gatewayStatus===GatewayStatus.ACTIVE&&clicked){console.log('Verified human, now minting...');onMint();setClicked(false);}},[gatewayStatus,clicked,setClicked,onMint]);return/*#__PURE__*/_jsx(CTAButton,{disabled:clicked||(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.isSoldOut)||isSoldOut||isMinting||isEnded||!isActive||isVerifying,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(isActive&&(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.gatekeeper)&&gatewayStatus!==GatewayStatus.ACTIVE)){_context.next=7;break;}console.log('Requesting gateway token');setClicked(true);_context.next=5;return requestGatewayToken();case 5:_context.next=10;break;case 7:console.log('Minting...');_context.next=10;return onMint();case 10:case\"end\":return _context.stop();}}},_callee);})),variant:\"contained\",children:!candyMachine?\"CONNECTING...\":(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.isSoldOut)||isSoldOut?'SOLD OUT':isActive?isVerifying?'VERIFYING...':isMinting||clicked?/*#__PURE__*/_jsx(CircularProgress,{}):\"MINT\":isEnded?\"ENDED\":(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.goLiveDate)?\"SOON\":\"UNAVAILABLE\"});};","map":{"version":3,"sources":["/Users/a1/Downloads/Mainnet/front/src/MintButton.tsx"],"names":["styled","useEffect","useState","Button","CircularProgress","GatewayStatus","useGateway","CTAButton","MintButton","onMint","candyMachine","isMinting","isEnded","isActive","isSoldOut","requestGatewayToken","gatewayStatus","clicked","setClicked","isVerifying","setIsVerifying","COLLECTING_USER_INFORMATION","ACTIVE","console","log","state","gatekeeper","goLiveDate"],"mappings":"ioBAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAAQC,SAAR,CAAmBC,QAAnB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAAQC,gBAAR,KAA+B,mBAA/B,CACA,OAAQC,aAAR,CAAuBC,UAAvB,KAAwC,6BAAxC,C,2CAIA,MAAO,IAAMC,CAAAA,SAAS,CAAGP,MAAM,CAACG,MAAD,CAAT,sPAAf,CAQP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAcpB,IAbyBC,CAAAA,MAazB,MAbyBA,MAazB,CAZyBC,YAYzB,MAZyBA,YAYzB,CAXyBC,SAWzB,MAXyBA,SAWzB,CAVyBC,OAUzB,MAVyBA,OAUzB,CATyBC,QASzB,MATyBA,QASzB,CARyBC,SAQzB,MARyBA,SAQzB,iBAC2CR,UAAU,EADrD,CACKS,mBADL,aACKA,mBADL,CAC0BC,aAD1B,aAC0BA,aAD1B,eAE4Bd,QAAQ,CAAC,KAAD,CAFpC,wCAEKe,OAFL,eAEcC,UAFd,8BAGoChB,QAAQ,CAAC,KAAD,CAH5C,yCAGKiB,WAHL,eAGkBC,cAHlB,eAKFnB,SAAS,CAAC,UAAM,CACZmB,cAAc,CAAC,KAAD,CAAd,CACA,GAAIJ,aAAa,GAAKX,aAAa,CAACgB,2BAAhC,EAA+DJ,OAAnE,CAA4E,CACxE;AACAG,cAAc,CAAC,IAAD,CAAd,CACH,CAHD,IAGO,IAAIJ,aAAa,GAAKX,aAAa,CAACiB,MAAhC,EAA0CL,OAA9C,CAAuD,CAC1DM,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACAf,MAAM,GACNS,UAAU,CAAC,KAAD,CAAV,CACH,CACJ,CAVQ,CAUN,CAACF,aAAD,CAAgBC,OAAhB,CAAyBC,UAAzB,CAAqCT,MAArC,CAVM,CAAT,CAYA,mBACI,KAAC,SAAD,EACI,QAAQ,CACJQ,OAAO,GACPP,YADO,SACPA,YADO,iBACPA,YAAY,CAAEe,KAAd,CAAoBX,SADb,CAAP,EAEAA,SAFA,EAGAH,SAHA,EAIAC,OAJA,EAKA,CAACC,QALD,EAMAM,WARR,CAUI,OAAO,sEAAE,wIACDN,QAAQ,GAAIH,YAAJ,SAAIA,YAAJ,iBAAIA,YAAY,CAAEe,KAAd,CAAoBC,UAAxB,CAAR,EAA8CV,aAAa,GAAKX,aAAa,CAACiB,MAD7E,0BAEDC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EACAN,UAAU,CAAC,IAAD,CAAV,CAHC,sBAIKH,CAAAA,mBAAmB,EAJxB,sCAMDQ,OAAO,CAACC,GAAR,CAAY,YAAZ,EANC,uBAOKf,CAAAA,MAAM,EAPX,wDAAF,EAVX,CAoBI,OAAO,CAAC,WApBZ,UAsBK,CAACC,YAAD,CACG,eADH,CAEG,CAAAA,YAAY,OAAZ,EAAAA,YAAY,SAAZ,QAAAA,YAAY,CAAEe,KAAd,CAAoBX,SAApB,GAAiCA,SAAjC,CACA,UADA,CAEAD,QAAQ,CACRM,WAAW,CAAG,cAAH,CACPR,SAAS,EAAIM,OAAb,cACI,KAAC,gBAAD,IADJ,CAGI,MALA,CAORL,OAAO,CAAG,OAAH,CAAc,CAAAF,YAAY,OAAZ,EAAAA,YAAY,SAAZ,QAAAA,YAAY,CAAEe,KAAd,CAAoBE,UAApB,EACrB,MADqB,CAGrB,aApCR,EADJ,CAyCH,CAxEM","sourcesContent":["import styled from 'styled-components';\nimport {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport {CircularProgress} from '@material-ui/core';\nimport {GatewayStatus, useGateway} from '@civic/solana-gateway-react';\nimport {CandyMachine} from './candy-machine';\n\n\nexport const CTAButton = styled(Button)`\n  display: block !important;\n  margin: 0 auto !important;\n  background-color: var(--title-text-color) !important;\n  min-width: 120px !important;\n  font-size: 1em !important;\n`;\n\nexport const MintButton = ({\n                               onMint,\n                               candyMachine,\n                               isMinting,\n                               isEnded,\n                               isActive,\n                               isSoldOut\n                           }: {\n    onMint: () => Promise<void>;\n    candyMachine: CandyMachine | undefined;\n    isMinting: boolean;\n    isEnded: boolean;\n    isActive: boolean;\n    isSoldOut: boolean;\n}) => {\n    const {requestGatewayToken, gatewayStatus} = useGateway();\n    const [clicked, setClicked] = useState(false);\n    const [isVerifying, setIsVerifying] = useState(false);\n\n    useEffect(() => {\n        setIsVerifying(false);\n        if (gatewayStatus === GatewayStatus.COLLECTING_USER_INFORMATION && clicked) {\n            // when user approves wallet verification txn\n            setIsVerifying(true);\n        } else if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\n            console.log('Verified human, now minting...');\n            onMint();\n            setClicked(false);\n        }\n    }, [gatewayStatus, clicked, setClicked, onMint]);\n\n    return (\n        <CTAButton\n            disabled={\n                clicked ||\n                candyMachine?.state.isSoldOut ||\n                isSoldOut ||\n                isMinting ||\n                isEnded ||\n                !isActive ||\n                isVerifying\n            }\n            onClick={async () => {\n                if (isActive && candyMachine?.state.gatekeeper && gatewayStatus !== GatewayStatus.ACTIVE) {\n                    console.log('Requesting gateway token');\n                    setClicked(true);\n                    await requestGatewayToken();\n                } else {\n                    console.log('Minting...');\n                    await onMint();\n                }\n            }}\n            variant=\"contained\"\n        >\n            {!candyMachine ? (\n                \"CONNECTING...\"\n            ) : candyMachine?.state.isSoldOut || isSoldOut ? (\n                'SOLD OUT'\n            ) : isActive ? (\n                isVerifying ? 'VERIFYING...' :\n                    isMinting || clicked ? (\n                        <CircularProgress/>\n                    ) : (\n                        \"MINT\"\n                    )\n            ) : isEnded ? \"ENDED\" : (candyMachine?.state.goLiveDate ? (\n                \"SOON\"\n            ) : (\n                \"UNAVAILABLE\"\n            ))}\n        </CTAButton>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}