{"ast":null,"code":"import{createTheme,ThemeProvider}from\"@material-ui/core\";import{useMemo}from\"react\";import{ConnectionProvider,WalletProvider}from\"@solana/wallet-adapter-react\";import*as anchor from\"@project-serum/anchor\";import{clusterApiUrl}from\"@solana/web3.js\";import{getPhantomWallet,getSlopeWallet,getSolflareWallet,getSolflareWebWallet,getSolletWallet,getSolletExtensionWallet,getSolongWallet,getLedgerWallet,getSafePalWallet}from\"@solana/wallet-adapter-wallets\";import{WalletModalProvider}from'@solana/wallet-adapter-react-ui';import\"./App.css\";import Home from\"./Home\";import{jsx as _jsx}from\"react/jsx-runtime\";require('@solana/wallet-adapter-react-ui/styles.css');var candyMachineId=new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);var network=process.env.REACT_APP_SOLANA_NETWORK;var rpcHost=process.env.REACT_APP_SOLANA_RPC_HOST;var connection=new anchor.web3.Connection(rpcHost);var txTimeout=30000;// milliseconds (confirm this works for your project)\nvar theme=createTheme({palette:{type:'dark'},overrides:{MuiButtonBase:{root:{justifyContent:'flex-start'}},MuiButton:{root:{textTransform:undefined,padding:'12px 16px'},startIcon:{marginRight:8},endIcon:{marginLeft:8}}}});var App=function App(){// Custom RPC endpoint.\nvar endpoint=useMemo(function(){return clusterApiUrl(network);},[]);// @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking and lazy loading --\n// Only the wallets you configure here will be compiled into your application, and only the dependencies\n// of wallets that your users connect to will be loaded.\nvar wallets=useMemo(function(){return[getPhantomWallet(),getSlopeWallet(),getSolflareWallet(),getSolflareWebWallet(),getSolletWallet({network:network}),getSolletExtensionWallet({network:network}),getSolongWallet(),getLedgerWallet(),getSafePalWallet()];},[]);return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,autoConnect:true,children:/*#__PURE__*/_jsx(WalletModalProvider,{children:/*#__PURE__*/_jsx(Home,{candyMachineId:candyMachineId,connection:connection,txTimeout:txTimeout,rpcHost:rpcHost})})})})});};export default App;","map":{"version":3,"sources":["/Users/a1/Downloads/Mainnet/front/src/App.tsx"],"names":["createTheme","ThemeProvider","useMemo","ConnectionProvider","WalletProvider","anchor","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolflareWebWallet","getSolletWallet","getSolletExtensionWallet","getSolongWallet","getLedgerWallet","getSafePalWallet","WalletModalProvider","Home","require","candyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","txTimeout","theme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","undefined","padding","startIcon","marginRight","endIcon","marginLeft","App","endpoint","wallets"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,aAAtB,KAA2C,mBAA3C,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OACIC,kBADJ,CAEIC,cAFJ,KAGO,8BAHP,CAIA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,uBAAxB,CACA,OAASC,aAAT,KAA8B,iBAA9B,CAEA,OACIC,gBADJ,CAEIC,cAFJ,CAGIC,iBAHJ,CAIIC,oBAJJ,CAKIC,eALJ,CAMIC,wBANJ,CAOIC,eAPJ,CAQIC,eARJ,CASIC,gBATJ,KAUO,gCAVP,CAYA,OACIC,mBADJ,KAEO,iCAFP,CAIA,MAAO,WAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,2CAEAC,OAAO,CAAC,4CAAD,CAAP,CAGA,GAAMC,CAAAA,cAAc,CAAG,GAAId,CAAAA,MAAM,CAACe,IAAP,CAAYC,SAAhB,CACrBC,OAAO,CAACC,GAAR,CAAYC,0BADS,CAAvB,CAIA,GAAMC,CAAAA,OAAO,CAAGH,OAAO,CAACC,GAAR,CAAYG,wBAA5B,CAEA,GAAMC,CAAAA,OAAO,CAAGL,OAAO,CAACC,GAAR,CAAYK,yBAA5B,CACA,GAAMC,CAAAA,UAAU,CAAG,GAAIxB,CAAAA,MAAM,CAACe,IAAP,CAAYU,UAAhB,CAA2BH,OAA3B,CAAnB,CAEA,GAAMI,CAAAA,SAAS,CAAG,KAAlB,CAAyB;AAEzB,GAAMC,CAAAA,KAAK,CAAGhC,WAAW,CAAC,CACtBiC,OAAO,CAAE,CACLC,IAAI,CAAE,MADD,CADa,CAItBC,SAAS,CAAE,CACPC,aAAa,CAAE,CACXC,IAAI,CAAE,CACFC,cAAc,CAAE,YADd,CADK,CADR,CAMPC,SAAS,CAAE,CACPF,IAAI,CAAE,CACFG,aAAa,CAAEC,SADb,CAEFC,OAAO,CAAE,WAFP,CADC,CAKPC,SAAS,CAAE,CACPC,WAAW,CAAE,CADN,CALJ,CAQPC,OAAO,CAAE,CACLC,UAAU,CAAE,CADP,CARF,CANJ,CAJW,CAAD,CAAzB,CAyBA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACd;AACF,GAAMC,CAAAA,QAAQ,CAAG9C,OAAO,CAAC,iBAAMI,CAAAA,aAAa,CAACmB,OAAD,CAAnB,EAAD,CAA+B,EAA/B,CAAxB,CAEE;AACA;AACA;AACA,GAAMwB,CAAAA,OAAO,CAAG/C,OAAO,CACnB,iBAAM,CACFK,gBAAgB,EADd,CAEFC,cAAc,EAFZ,CAGFC,iBAAiB,EAHf,CAIFC,oBAAoB,EAJlB,CAKFC,eAAe,CAAC,CAAEc,OAAO,CAAPA,OAAF,CAAD,CALb,CAMFb,wBAAwB,CAAC,CAAEa,OAAO,CAAPA,OAAF,CAAD,CANtB,CAOFZ,eAAe,EAPb,CAQFC,eAAe,EARb,CASFC,gBAAgB,EATd,CAAN,EADmB,CAYnB,EAZmB,CAAvB,CAeF,mBACI,KAAC,aAAD,EAAe,KAAK,CAAEiB,KAAtB,uBACE,KAAC,kBAAD,EAAoB,QAAQ,CAAEgB,QAA9B,uBACE,KAAC,cAAD,EAAgB,OAAO,CAAEC,OAAzB,CAAkC,WAAW,CAAE,IAA/C,uBACE,KAAC,mBAAD,wBACE,KAAC,IAAD,EACE,cAAc,CAAE9B,cADlB,CAEE,UAAU,CAAEU,UAFd,CAGE,SAAS,CAAEE,SAHb,CAIE,OAAO,CAAEJ,OAJX,EADF,EADF,EADF,EADF,EADJ,CAgBD,CAtCD,CAwCA,cAAeoB,CAAAA,GAAf","sourcesContent":["import { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { useMemo } from \"react\";\nimport {\n    ConnectionProvider,\n    WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n    getPhantomWallet,\n    getSlopeWallet,\n    getSolflareWallet,\n    getSolflareWebWallet,\n    getSolletWallet,\n    getSolletExtensionWallet,\n    getSolongWallet,\n    getLedgerWallet,\n    getSafePalWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n    WalletModalProvider\n} from '@solana/wallet-adapter-react-ui';\n\nimport \"./App.css\";\nimport Home from \"./Home\";\n\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n    // Custom RPC endpoint.\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n    // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking and lazy loading --\n    // Only the wallets you configure here will be compiled into your application, and only the dependencies\n    // of wallets that your users connect to will be loaded.\n    const wallets = useMemo(\n        () => [\n            getPhantomWallet(),\n            getSlopeWallet(),\n            getSolflareWallet(),\n            getSolflareWebWallet(),\n            getSolletWallet({ network }),\n            getSolletExtensionWallet({ network }),\n            getSolongWallet(),\n            getLedgerWallet(),\n            getSafePalWallet(),\n        ],\n        []\n    );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect={true}>\n            <WalletModalProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                connection={connection}\n                txTimeout={txTimeout}\n                rpcHost={rpcHost}\n              />\n            </WalletModalProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}